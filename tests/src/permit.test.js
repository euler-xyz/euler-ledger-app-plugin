import "core-js/stable";
import "regenerator-runtime/runtime";
import { waitForAppScreen, zemu, nano_models, txFromEtherscan} from './test.fixture';

// Test from replayed transaction: https://etherscan.io/tx/0x5aaea6cd9ef4643b94fd5396e68ad4b79bc221402dfcd8f67772bf1c43a3a4f3
nano_models.forEach(function(model) {
  test('[Nano ' + model.letter + '] Permit', zemu(model, async (sim, eth) => {

  // The rawTx of the tx up above is accessible through: https://etherscan.io/getRawTx?tx=0x5aaea6cd9ef4643b94fd5396e68ad4b79bc221402dfcd8f67772bf1c43a3a4f3
  const serializedTx = txFromEtherscan("0x02f9029201488459682f00850317c8cac58303ab749459828fdf7ee634aaad3f58b19fdba3b03e2d9d8080b90224eb937aeb000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000059828fdf7ee634aaad3f58b19fdba3b03e2d9d80000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4a3e02273000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000632e38ca000000000000000000000000000000000000000000000000000000000000001b3b3a0c7ea032a06dc1c2b083edf813db5995c2e8bdb56e543b3aae0de0e4bd524c5223276b5352a50ae1351254ab70821ef35b14debd40435fbe6977389f0ed400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000092f16b08a272c2a3048d93ee807fd3b6225e3bc3c001a0913b2f4a0ab634dfe14610def57b99c8a4a85c10e458a0d6168b077431a11530a06523b1435aaa1b0ba758feac20145e9b67a7770fcceed3fcb4e8b3d6eec6f62c");

  const tx = eth.signTransaction("44'/60'/0'/0", serializedTx);

  const right_clicks = model.letter === 'S' ? 8 : 5;

  // Wait for the application to actually load and parse the transaction
  await waitForAppScreen(sim);

  // Navigate the display by pressing the right button `right_clicks` times, then pressing both buttons to accept the transaction.
  await sim.navigateAndCompareSnapshots('.', model.name + '_permit', [right_clicks, 0]);

  await tx;
  }));
});
